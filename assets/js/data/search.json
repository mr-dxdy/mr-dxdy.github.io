[ { "title": "Настройка monit", "url": "/posts/setup_monit.html/", "categories": "", "tags": "Новости, Monit", "date": "2018-08-28 15:14:00 +0300", "snippet": "Заходим по ssh на сервер: ssh user@your-serverУстанавливаем приложение monit: sudo apt-get install monitОткрываем доступ к админке через http:sudo vim /etc/monit/monitrcНаходим раздел и редактируем...", "content": "Заходим по ssh на сервер: ssh user@your-serverУстанавливаем приложение monit: sudo apt-get install monitОткрываем доступ к админке через http:sudo vim /etc/monit/monitrcНаходим раздел и редактируем:set httpd port 2812 and use address your-server allow 0.0.0.0/0.0.0.0 allow admin:monitПерезагружаем службу sudo service monit reload. Проверяем работоспособность админки: http://your-server:2812Редактируем раздел, откуда брать конфиги:# include /etc/monit/conf.d/*include /etc/monit/conf-enabled/*Напишем конфиг для запуска службы. Хранение конфигов схоже с продуктом nginx.Все конфиги надо складывать в папку /etc/monit/conf-available и делать линки на эти конфиги в папку /etc/monit/conf-enabled.Для многих известных служб уже написаны конфиги. Их можно найти тут.У Monit свой DSL для написания конфигов, который очень легко читать (подробнее тут). Пример конфига для postgresql:check process postgresql with pidfile /var/run/postgresql/9.6-main.pid group database start program = \"/etc/init.d/postgresql start\" stop program = \"/etc/init.d/postgresql stop\" if failed host localhost port 5432 protocol pgsql then restart if 5 restarts with 5 cycles then timeoutТеперь проверим, что конфиг - валидный: sudo monit -t.Если синтаксис корректный, то перезагружаем monit: sudo monit reload.Теперь напишем конфиг для запуска сервера Puma:check process your-app-puma with pidfile /srv/www/your-app/shared/tmp/pids/puma.pid group site start program = \"/bin/su - user -c 'cd /srv/www/your-app/current &amp;&amp; bundle exec pumactl -F /srv/www/your-app/shared/puma.rb start'\" with timeout 10 seconds stop program = \"/bin/su - user -c 'cd /srv/www/your-app/current &amp;&amp; bundle exec pumactl -F /srv/www/your-app/shared/puma.rb stop'\" with timeout 10 seconds if 3 restarts within 3 cycles then timeoutПример конфига для запуска gitlab-runner. Здесь проверка службы происходит не по pid, а по названию процесса:check process gitlab-runner matching \"gitlab-runner\" group gitlab-ci start program = \"/usr/sbin/service gitlab-runner start\" stop program = \"/usr/sbin/service gitlab-runner stop\" restart program = \"/usr/sbin/service gitlab-runner restart\" if 5 restarts with 5 cycles then timeoutИсточники: Официальная документация" }, { "title": "Installing Ruby", "url": "/posts/installing_ruby.html/", "categories": "", "tags": "Новости, Ruby", "date": "2015-09-29 09:15:00 +0300", "snippet": "Patch 41808При установке ruby-1.9.3 возникает ошибка:ec_group_new_curve_gf2m' undeclared (first use in this function)Проблема решается с помощью установки патча:curl -fsSL https://gist.githubuserco...", "content": "Patch 41808При установке ruby-1.9.3 возникает ошибка:ec_group_new_curve_gf2m' undeclared (first use in this function)Проблема решается с помощью установки патча:curl -fsSL https://gist.githubusercontent.com/petems/8420477/raw/4b23330b5c3cb5616eb90908c98421e4873e6ca6/41808.diff | rbenv install --patch 1.9.3-p194Source code of patch #41808:Index: ext/openssl/ossl_pkey_ec.c===================================================================--- ext/openssl/ossl_pkey_ec.c (revision 41807)+++ ext/openssl/ossl_pkey_ec.c (revision 41808)@@ -757,8 +757,10 @@ method = EC_GFp_mont_method(); } else if (id == s_GFp_nist) { method = EC_GFp_nist_method();+#if !defined(OPENSSL_NO_EC2M) } else if (id == s_GF2m_simple) { method = EC_GF2m_simple_method();+#endif } if (method) {@@ -811,8 +811,10 @@ if (id == s_GFp) { new_curve = EC_GROUP_new_curve_GFp;+#if !defined(OPENSSL_NO_EC2M) } else if (id == s_GF2m) { new_curve = EC_GROUP_new_curve_GF2m;+#endif } else { rb_raise(rb_eArgError, \"unknown symbol, must be :GFp or :GF2m\"); }Аналогичная ситуация возникает при установке ruby-1.8.7-p375:curl -fsSL https://gist.github.com/thescouser89/8102408/raw/417cba9fee6ba1945b967b5ef236f676bd5005e0/1.8.7-rbenv.patch | rbenv install --patch 1.8.7-p375--- ext/openssl/ossl_pkey_ec.c+++ ext/openssl/ossl_pkey_ec.c@@ -757,8 +757,10 @@ static VALUE ossl_ec_group_initialize(int argc, VALUE *argv, VALUE self) method = EC_GFp_mont_method(); } else if (id == s_GFp_nist) { method = EC_GFp_nist_method();+#if !defined(OPENSSl_NO_EC2M) } else if (id == s_GF2m_simple) { method = EC_GF2m_simple_method();+#endif } if (method) {@@ -811,8 +813,10 @@ static VALUE ossl_ec_group_initialize(int argc, VALUE *argv, VALUE self) if (id == s_GFp) { new_curve = EC_GROUP_new_curve_GFp;+#if !defined(OPENSSL_NO_EC2M) } else if (id == s_GF2m) { new_curve = EC_GROUP_new_curve_GF2m;+#endif } else { rb_raise(rb_eArgError, \"unknown symbol, must be :GFp or :GF2m\"); }ИсточникRuby-build WIKIReadline (LoadError)I was greeted with the following message:require: cannot load such file -- readline (LoadError)The solutions:# zypper install libreadline5curl -fsSL https://gist.github.com/LeonB/10503374/raw | rbenv install --patch 2.0.0-p451Source code of patch:diff --git ext/readline/extconf.rb ext/readline/extconf.rbindex 4920137..8e81253 100644--- ext/readline/extconf.rb+++ ext/readline/extconf.rb@@ -19,6 +19,10 @@ def readline.have_func(func) return super(func, headers) end+def readline.have_type(type)+ return super(type, headers)+end+ dir_config('curses') dir_config('ncurses') dir_config('termcap')@@ -93,4 +97,9 @@ readline.have_func(\"remove_history\") readline.have_func(\"clear_history\") readline.have_func(\"rl_redisplay\") readline.have_func(\"rl_insert_text\")++unless readline.have_type(\"rl_hook_func_t\")+ $defs &lt;&lt; \"-Drl_hook_func_t=Function\"+end+ create_makefile(\"readline\")diff --git ext/readline/readline.c ext/readline/readline.cindex 3e7feea..482bf80 100644--- ext/readline/readline.c+++ ext/readline/readline.c@@ -1883,7 +1883,7 @@ Init_readline() rl_attempted_completion_function = readline_attempted_completion_function; #if defined(HAVE_RL_PRE_INPUT_HOOK)- rl_pre_input_hook = (Function *)readline_pre_input_hook;+ rl_pre_input_hook = (rl_hook_func_t *)readline_pre_input_hook; #endif #ifdef HAVE_RL_CATCH_SIGNALS rl_catch_signals = 0;Source:Readline error when building rubyCompiling readline.cОшибка при установке ruby 2.0.0:compiling readline.creadline.c: In function ‘Init_readline’:readline.c:1886:26: error: ‘Function’ undeclared (first use in this function)rl_pre_input_hook = (Function *)readline_pre_input_hook;^readline.c:1886:26: note: each undeclared identifier is reported only once for each function it appears inreadline.c:1886:36: error: expected expression before ‘)’ tokenrl_pre_input_hook = (Function *)readline_pre_input_hook;^readline.c: At top level:readline.c:530:1: warning: ‘readline_pre_input_hook’ defined but not used [-Wunused-function]readline_pre_input_hook(void)^make[2]: *** [readline.o] Ошибка 1Решениеcurl -fsSL https://gist.github.com/LeonB/10503374/raw | rbenv install --patch 2.0.0-p451" }, { "title": "Шпаргалка по OpenSUSE", "url": "/posts/opensuse-cheat-sheet.html/", "categories": "", "tags": "Новости, Linux", "date": "2015-09-18 11:21:00 +0300", "snippet": "Обновление дистрибутиваПример обновления OpenSuse с версии 13.1 до 13.2:sed -i 's/13\\.1/13\\.2/g' /etc/zypp/repos.d/*zypper clean -azypper refzypper dupНастройка WI-FIНастройка WI-FI для OpenSUSE 13...", "content": "Обновление дистрибутиваПример обновления OpenSuse с версии 13.1 до 13.2:sed -i 's/13\\.1/13\\.2/g' /etc/zypp/repos.d/*zypper clean -azypper refzypper dupНастройка WI-FIНастройка WI-FI для OpenSUSE 13.2:lspci | grep Network# =&gt; BCM4312 802.11b/g LP-PHY (rev 01)zypper addrepo --refresh --name \"packman\" http://packman.inode.at/suse/openSUSE_13.2/ packmanzypper in broadcom-wl broadcom-wl-kmp-desktopИсточник OpenSUSE GUIDE. Wifi Driver Installation" }, { "title": "Установка CUDA под Linux", "url": "/posts/ustanovka-cuda-pod-linux.html/", "categories": "", "tags": "Новости, CUDA, Linux", "date": "2012-12-16 00:00:00 +0400", "snippet": "Давайте рассмотрим пример по установке CUDA под Linux. Для примера возьмем сырой дистрибутив OpenSuse (только что установленный на жесткий диск) и проделаем все операции по установке, настройке и с...", "content": "Давайте рассмотрим пример по установке CUDA под Linux. Для примера возьмем сырой дистрибутив OpenSuse (только что установленный на жесткий диск) и проделаем все операции по установке, настройке и сборке первого проекта на CUDA.Для начала следует обновить дистрибутив OpenSuse до самых свежих и стабильных пакетов на текущей момент. Совет очень важный, так как порой при установке драйвера nvidia требуется пакет kernel-devel. Несовпадение пакета необходимый для драйвера nvidia с пакетом который установлен у вас в системе может повлечь к сбою в установке драйвера.По умолчанию в дистрибутиве OpenSuse стоит бесплатный видеодрайвер nouveau, который необходимо занести в черный список: sudo echo -e \"blacklist nouveau\\\\noptions nouveau modeset=0\" &gt;&gt; /etc/modprobe.d/50-blacklist.confТеперь нам необходимо узнать какая у нас видеокарта:bash /sbin/lspci | grep -i vgaВ итоге вы должны получить похожую строчку: 01:00.0 VGA compatible controller: nVidia Corporation GT216 [GeForce GT 240M] (rev a2)Как видите я являюсь обладателем недорогой видеокарты GeForce GT240M. Теперь заходим на сайт nvidia и скачиваем драйвер под свою видеокарту.В итоге мы получим файл NVIDIA-Linux--.**.run. Перед установкой нам необходимо установить необходимые пакеты (компилятор и пакет разработчика для ядра):zypper in kernel-devel gccТеперь нам необходимо остановить иксы:sudo /etc/init.d/xdm stopИ начать установку драйвера:sudo chmod +x NVIDIA-Linux-**-**.**.runsudo ./NVIDIA-Linux-**-**.**.runТеперь можно перезагрузить систему и проверить, что драйвер установлен:cat /etc/X11/xorg.conf | grep \"Driver\"Осталось установить CUDA. Для начала с сайта nvidia скачиваем файл CUDA Toolkit, который содержит все необходимое для написания и запуска программ на CUDA. Вместе с CUDA Toolkit скачивают файл GPU Computing SDK code samples, который содержит кучу примеров для изучения технологии CUDA.Установку CUDA начнем с файла CUDA Toolkit:sudo chmod +x cudatoolkit_**.runsudo ./cudatoolkit_**.runПрограмма предложит вам путь куда установить ПО для CUDA. Лучше оставить путь по умолчанию: cpp /usr/local/.Аналогично проделываем операцию по установке GPU Computing SDK code samples. Теперь можно написать первую программу… но наш компьютер не видит компилятор nvcc, поэтому добавим пути в переменное окружение (добавить строки в файл ~/.profile):export PATH=/usr/local/cuda/bin:$PATHexport LD_LIBRARY_PATH=/usr/local/cuda/lib:$LD_LIBRARY_PATHВнимание! Если у вас 64 разрядная система, то указываем путь до папки lib64export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATHТеперь можно написать первую программу, которую пишут на всех языках:#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;__global__ void HelloCUDA(char* result, int num){ int i = 0; char p_HelloCUDA[] = \"Hello CUDA!\"; for(i = 0; i &lt; num; i++) { result[i] = p_HelloCUDA[i]; }}int main(int argc, char* argv[]){ char *device_result = 0; char host_result[12] = {0}; cudaMalloc((void**) &amp;device_result, sizeof(char) * 11); HelloCUDA&lt;&lt;&lt;1, 1&gt;&gt;&gt;(device_result, 11); cudaThreadSynchronize(); cudaMemcpy(host_result, device_result, sizeof(char) * 11, cudaMemcpyDeviceToHost); cudaFree(device_result); printf(\"%s\\n\", host_result); return 0;}Для компиляции и запуска программы необходимо:nvcc hello.cu -o hello.o ./hello.oКод достаточно грубый, ведь мы не обратываем ошибки при вызове функций CUDA. Для этого лучше посмотреть примеры из CUDA SDK, где через макросы обрабатываются исключения. Но для этого необходимо указывать компилятору путь до заголовочного файла cutil_inline.h из CUDA SDK.Для обучения добавлю еще пару примеров:Сложение векторов:#include &lt;stdio.h&gt;#include &lt;cuda_runtime_api.h&gt;__global__ void sum(float* A, float* B, float* C, int N){ int i = blockDim.x * blockIdx.x + threadIdx.x; if (i &lt; N) C[i] = A[i] + B[i];}void init(float *arr, int size, float value){ for(int i = 0; i &lt; size; ++i) arr[i] = value;}int main(){ int N = 500000; size_t size = N * sizeof(float); float *A, *B, *C; A = (float *)malloc(size); B = (float *)malloc(size); C = (float *)malloc(size); init(A, N, 1); init(B, N, 0); float *cudaA, *cudaB, *cudaC; cudaMalloc((void **) &amp;cudaA, size); cudaMalloc((void **) &amp;cudaB, size); cudaMalloc((void **) &amp;cudaC, size); cudaMemcpy(cudaA, A, size, cudaMemcpyHostToDevice); cudaMemcpy(cudaB, B, size, cudaMemcpyHostToDevice); dim3 threads = dim3(256, 1); dim3 blocks = dim3((N + threads.x) / threads.x, 1); sum&lt;&lt;&lt; blocks, threads &gt;&gt;&gt; (cudaA, cudaB, cudaC, N); cudaMemcpy(C, cudaC, size, cudaMemcpyDeviceToHost); float sum = 0; for(int i = 0; i &lt; N; ++i) sum += C[i]; printf(\"Summa %f\\n\", sum); free(A); free(B); free(C); cudaFree(cudaA); cudaFree(cudaB); cudaFree(cudaC); return 0;}Транспонирование матрицы:#include &lt;stdio.h&gt;#include &lt;cuda_runtime_api.h&gt;__global__ void trans(int* A, int* B, int N){ int xIndex = blockDim.x * blockIdx.x + threadIdx.x; int yIndex = blockDim.y * blockIdx.y + threadIdx.y; int inIndex = xIndex + N * yIndex; int outIndex = yIndex + N * xIndex; B[inIndex] = A[outIndex];}void init(int *arr, int size){ for(int i = 0; i &lt; size; ++i) for(int j = 0; j &lt; size; ++j) arr[i*size+j] = i;}void print(int *arr, int size){ for(int i = 0; i &lt; size; ++i){ for(int j = 0; j &lt; size; ++j) printf(\"%d \", arr[i*size+j]); printf(\"\\n\"); } printf(\"\\n\");}int main(){ int N = 16; int block = 16; size_t size = N*N * sizeof(int); int *A, *B; A = (int *)malloc(size); B = (int *)malloc(size); init(A, N); print(A, N); int *cudaA, *cudaB; cudaMalloc((void **) &amp;cudaA, size); cudaMalloc((void **) &amp;cudaB, size); cudaMemcpy(cudaA, A, size, cudaMemcpyHostToDevice); dim3 threads = dim3(block, block); dim3 blocks = dim3(N / threads.x, N / threads.y); trans&lt;&lt;&lt; blocks, threads &gt;&gt;&gt; (cudaA, cudaB, N); cudaMemcpy(B, cudaB, size, cudaMemcpyDeviceToHost); print(B,N); free(A); free(B); cudaFree(cudaA); cudaFree(cudaB); return 0;}" }, { "title": "94 ... отлично!", "url": "/posts/94-otlichno.html/", "categories": "", "tags": "Новости", "date": "2012-06-15 00:00:00 +0400", "snippet": "Пока свежо в памяти, пока моя бурная фантазия не стала искажать факты и добавлять от “себячину”, пока я…, пока-пока… Ох, нет, пора начинать историю…На календаре был конец апреля, зачетная неделя, 4...", "content": "Пока свежо в памяти, пока моя бурная фантазия не стала искажать факты и добавлять от “себячину”, пока я…, пока-пока… Ох, нет, пора начинать историю…На календаре был конец апреля, зачетная неделя, 4 курс ПМиК, предмет “Социальные и этические вопросы ИТ”. Все студенты были выжаты как лимон, сил нет… преподаватель требует подготовить и публично защитить курсовую не позднее 29 апреля. Все студенты помотали головой, намотали на ус и добавили себе в “TODO лист” новую закладку на 29 апреля - ~скачать с интернета~ написать курсовую, распечатать и сдать.Шло время… Более ответственные студенты являлись на пары, стимулом были баллы за посещаемость. Отдельная им благодарность, ведь нужно иметь огромное терпение, чтобы отсидеть две пары этики в субботу… Как ни странно, но меня тоже можно частично отнести к этим студентам… Спросите как я продержался? Секрет очень прост - чтение электронных книг. Остальные же студенты были редкими гостями на празднике, изредка приходили посидеть на модулях…На календаре наступило 29 апреля, чудесная погода, суббота и две группы ИТ вспомнили, что нужен зачет по этике. Все ринулись в 206 аудиторию. Для преподавателя была точно нерешаемая задача. Он оценил всю сложность, магия чисел, сложные вычисления и в итоге вердикт - “Блин, ребят… мы за сегодня не успеем”. Но у преподавателя за плечами военное образование, поэтому он решил расставить автоматы…Небольшая речь из выступления преподавателя…“Сейчас я быстро зачитаю весь список студентов и баллы за зачет и курсовую работу. Заранее предупреждаю, если вы не услышите свою оценку за курсовую, то значит я еще не решил какую поставить вам оценку и будем решать вместе…”Все студенты успокоились и стали внимательно слушать: Айриян 105, Анциферов 94, …. (остальной список студентов)Уверяю вас, но в моей голове были именно такие мысли: “Айриян - 105, как такое возможно, ведь у нас максимум ставится 100, может преподаватель из своей шкалы баллы ставит, ведь по Дехтярю была подобная ситуация. Так-сс-с, Герман, забей, у тебя 94… не плохо, даже очень неплохо, ведь “пятерка” начинается с 85…”Пока я летал в облаках, пытаясь понять, почему так странно ставились баллы, все студенты с зачетками ринулись к столу преподавателя с требованием поставьте мне зачет. Но, препод же военный, поэтому в целях экономия времени и терпения, было объявлено - всем нужно самим расставить в зачетке название предмета, дату… За преподавателем оставалась задача лишь поставить оценку и подпись. Как говорится система была автоматизирована…Очередь шла… Когда я оказался с зачеткой у стола, преподаватель успел уже поставить полдюжины зачетов и оценок, это можно было прочитать на его лице… поэтому он встретил меня очень скромно: Ваша фамилия? Анциферов Какую оценку я вам поставил У меня 94 балла, наверно это отлично. Готово, поздравляю и удачной сессии.Я сделал несколько шагов, как вдруг… Анциферов, стой! Так у тебя же четверка за курсовую! И тут у меня в голове опять закрутились мысли: Айриян 100 за зачет, 5 за курсовую. Анциферов 90 за зачет и 4 за курсовую.Я возвращаюсь к столу преподавателя, а в голове крутится лишь одна мысль - “Ну вот… прощай пятерка, ну вот прощай пятерка, ну вот прощай пятерка”. Цикл мог бы продолжаться до бесконечности, если бы не счастливые слова преподавателя:Эх, Анциферов, неохота тебе в зачетке исправлять оценку, поэтому у себя в ведомости исправлю “четверку” на “пятерку”…" }, { "title": "Mission completed", "url": "/posts/mission-completed.html/", "categories": "", "tags": "Новости", "date": "2012-04-29 00:00:00 +0400", "snippet": "Название миссии: “Окончание бакалавриата”.Время окончания миссии: 28 апреля 2012г.Сложность: до сих пор не могу оценить сложность. С чем это связано? Может не хватало везения, усидчивости или все н...", "content": "Название миссии: “Окончание бакалавриата”.Время окончания миссии: 28 апреля 2012г.Сложность: до сих пор не могу оценить сложность. С чем это связано? Может не хватало везения, усидчивости или все намного проще - в каждом семестре я заключал долгосрочный контракт с ленью… Теперь судить об этом сложно, но можно с гордостью сказать, что я прошел все ступени обучения по курсу бакалавриата на факультете ПМиК. Осталось еще чу-чуть… а если быть точным, то 4 часа и 5 минут. Наверно все задают себе вопрос - “Не вижу логики, откуда эти цифры?” а все очень просто, 4 часа на написание ГОСов и как говорит мой коллега по работе 5 минут позора и ты с дипломом, то бишь защита диплома.Я очень долго думал над названием статьи, на ум приходили разные идеи, например “Окончание бакалавриата”, “За плечами бакалавриат”, порой даже приходили очень наивные идеи для названия, например, “Мы шли, шли, шли”…Идеи очень быстро рождались, но принять решения для статьи я все не мог и поэтому решил задать вопрос гуглу. Вбиваю в строку поиска фразу “Окончание бакалавриата” и тут, гугл выдает такие результаты: Магистратура (Поступление после бакалавриата). Специалист или бакалавр? Братишку хотят забрать в армию после бакалавриата.Черт, гугол начинает меня пугать. В голове начинают мелькать странные мысли, безумные идеи, даже не знаю, что за мистика происходит в моей голове, порой оно похоже на явление “мелодии в голове”, которая играет у тебя в голове, от нее ник как нельзя избавиться и нельзя описать и передать другому человеку… ПМиК, ПМиК что же ты делаешь со мной…Порой не можешь принять решение и начинаешь смотреть на своих друзей-однокурсников. Может они помогут принять решение. Многие уже решили эти проблемы, кто-то купил белый билет, хочет получить диплом бакалавра и полностью уйти в работу с ушами… Сейчас у меня идет тесное общение с военкоматом, они - “партия жуликов во главе с военкомом” хотят перетащить меня на свою сторону, но мы без боя не сдадимся… Насчет работы, хм… не знаю… мне нравится коллектив, но пока я не готов здесь бросить корни, не вижу роста…Насчет вторых, их не устраивает диплом бакалавра, с пометкой на цитату одного из участника этой группы - “Я не хочу быть полу-специалистом”, поэтому снаряжаются в новую, опасную экспедицию по названием - “Покорение магистратуры”. В принципе я подписываюсь под словами этого участника, надо идти дальше, НО… это большое НО.. 2 года изнурительных лекций… “Неклассическая логика”, “математическая логика и теория алгоритмов”… они сведут меня с ума… Но можно выбрать другую магистратуру… о которой ты ничего не знаешь, кроме о ее престижном названии… Это черная лошадка, в которой исход простой: успех или разочарование…Теперь поговорим о третьей категории, пойти в магистратуру не по специальности, например юрфак или эконом. Пусть меня научат. Не знаю, сложно судить об этом выборе, здесь уже новые преподы не успеют вбить тебе знания в голову, если ты будешь продолжать сопротивляться…Ну и задачка у меня, крепкая как орех… Так просто ее не решить.. может попробовать с точки зрения математики. Например с помощью нейронных сетей, а что? Давайте представим, задача чем-то похожа на разбиение на классы… Многослойный перцептрон с тремя выходами… выпускники прошлых лет - это обучающие примеры, жаль не о всех я знаю их результаты, поэтому сеть будет обучаться без учителя… нет-нет-нет… так делать нельзя… Надо все таки к себе прислушаться и сделать осознанный выбор." }, { "title": "Жизнь студента глазами лектора", "url": "/posts/zhizn-studenta-glazami-lektora.html/", "categories": "", "tags": "Новости", "date": "2012-03-31 00:00:00 +0400", "snippet": "Жизнь студента… Решил поднять эту тему для обсуждения.Может быть тема уж сильно надоела всем, но в основном каждый студент поднимает этот вопрос когда ищет правду или успокоения после совершения об...", "content": "Жизнь студента… Решил поднять эту тему для обсуждения.Может быть тема уж сильно надоела всем, но в основном каждый студент поднимает этот вопрос когда ищет правду или успокоения после совершения обидной ошибки в стенах университета. Конечно он будет рассказывать всю ситуацию и делать выводы за других людей, причастных к данной обиде. Ведь автору все дозволено в своей истории. Вот тут-то и беда, он не может подойти к обидчику и спросить “Почему вы поступили именно так?”. Порой охота залезть в голову твоему “обидчику” и посмотреть всю проблему с его точки зрения.Предлагаю осуществить эту мечту и для примера послушать мнение лектора из английского университета: Каждый более-менее серьезный лектор выпустил сотни если не тысячи студентов. Большинство из них забывается, как на тех картинах где главные лица, четко нарисованы, а остальные лишь схематично. Это часто приводит к неловкому положению, когда бывший студент приветствует тебя по имени, а у тебя даже нет приблизительного понимания кто он.Тебе льстит, что тебя помнят и одновременно неудобно, что ты не знаешь с кем говоришь. Но некоторые лица запоминаются. Те кто делал проект под твоим руководством и две категории студентов — очень хорошие и и очень плохие. Талантливые успехи и ужасные поражения остаются в памяти. И самое необычное, что существуют студенты, которые попадают в обе этих категории. И, знаете, я всегда испытывал сильную симпатию к ним. Сегодня посредственность — это самое обычное явление. Часто у меня были студенты, которые жутко не успевали только по одной причине: у них не было способностей. В этом нет ничего необычного. Необычно то, что в Великобритании сегодня мы доводим до выпуска множество таких студентов. Но, стоп, это уже другая история. Теперь посмотрим на блестящие неудачи. Из-за того, что оба этих фактора часто встречаются вместе, первая наша реакция — Этого не должно быть! Но это происходит, и часто. Почему? Чтобы это понять, нужно посмотреть еще на до-университетское время. Давайте вернемся в школу и посмотрим на блестящий провал в зародыше. Кто смотрел «Донни Дарко», поймет о каких студентах я говорю. Но если вы не смотрели — не беда, далее вы поймете о ком идет речь. Почти каждая школа выпускает такого ежегодно. В целом мы говорим о студенте с выдающимся талантом. Он делает большинство заданий в последнюю минуту, и тем не менее очень хорошо. Он не воспринимает школу с ее правилами серьезно, потому что если посмотреть внимательно множество школьных правил — это просто бред. Да и если посмотреть на мир свежим взглядом, можно увидеть похожую картину. Так, выходит у этого парня 2 черты: имеет острый ум и не принимает все всерьез. Вместе со вторым он считает все достаточно просто и немного скучно. Из-за этого он также понимает, что люди часто делают бессмысленные вещи. Пожив с такими мыслями он становится циником и немного печальным, потому что выходит, что ему тоже приходиться делать бессмысленные вещи т.к. из этого общества он уйти не может. У подростков хорошо получается высвечивать этот абсурд. Это становиться семенем будущей меланхолии и возможно дальнейшей депрессии. Еще одна черта этого парня — это низкий порог к скуке. Он берется за задачу и яростно работает над ней, и, быстро решив все самые сложные и интересные моменты, бросает ее до завершения. Он будет лежать на кровати и бренчать на гитаре несколько дней. В этом и есть двухполюсность: периоды высокой активности сменяются периодами меланхолии, остановки, бездействия. Если все понятно, давайте посмотрим, что происходит с ним когда он поступает в университет. У нас выходит тут 2 истории, одна радостная другая грустная. Радостная история состоит в том, что он зажигается тем, что выбрал для обучения, и выпускается с красным дипломом, подтверждая свой талант. Но я бы хотел глубже посмотреть на грустную историю, где соединяется талант и неудача. Студент начинает понимать, что университет во многом похож на школу по части бессмысленности правил и.т.п. Хотя университет выгодно отличается от школы красотой дисциплин созданных великими умами. Но если вы посмотрите на профессоров, не беря во внимание их навязчивость на счет своих бессмысленных в основном не читанных (и не читаемых) публикаций, можно сделать вывод что университет такой же не настоящий. Но давайте вернемся к нашему парню. Самая большая разница между школой и университетом для начинающих — это СВОБОДА. Свобода от мамы и папы, свобода делать что-то свое. Свобода по настоящему “облажаться”. Так наш герой начинает новую жизнь и понимает, что может делать все что хочет. Напиться и упасть спать в 3 утра. И вот он идет и полагается на свой врожденный талант, который вытащит его если что, ведь это работало в школе. И это работает какое-то время. Но таланта недостаточно, нужна еще и усидчивость, потому что материал сложнее в университете. Скоро он получает 5-, 4+ и наконец 4ки. Он испытывает необычное для него чувство неудачи, которое понижает его самооценку. Он все еще может встать в 5 утра и выполнить задание до 9 утра, но то что он делает уже не так хорошо. С такими студентами я сталкивался и сталкиваюсь по сей день. Они находятся внизу списка успеваемости. Встречая такого студента, я устанавливал тесный контакт с ним. (Однажды я даже спас одного и теперь он профессор и несчастен потому что был окружен бездарностями — но что тут можно сделать? ). Обычно он оживал к дипломному году, когда он мог сделать что-то свое и делал это очень очень хорошо. Что-то необычное. И большинство профессоров не поставят ему честную оценку за это, просто потому что он плохо учился. Часто такой студент не доводит дела до конца. Или бросает учебу. Подрабатывает продавая газировку или стрижет газоны, но всегда читает и изучает что-то, потому что хороший ум всегда голоден…Надеюсь статья помогла вам сделать хоть небольшие выводы для себя…Источником вдохновения послужила статья «Lisp разработчик: две стороны одной медали»." }, { "title": "Плавный переход в изображениях", "url": "/posts/plavnyj-perexod-v-izobrazheniyax.html/", "categories": "", "tags": "Новости, Алгоритмы", "date": "2012-03-27 17:20:00 +0400", "snippet": "Наверно у всех изучение компьютера начиналось с операционной системы Windows и у всех в памяти надолго осела добрая система Windows xp, ее голубое оформление, много надоедливых диалоговых окон, на ...", "content": "Наверно у всех изучение компьютера начиналось с операционной системы Windows и у всех в памяти надолго осела добрая система Windows xp, ее голубое оформление, много надоедливых диалоговых окон, на которые даже сперва и не поймешь как ответить: “да”, “нет”, “подумаю…”.Эх, одни лишь воспоминания… А теперь все внимание на картинку:Речь пойдет о эффекте “Плавный переход из одного изображения в другое”. Данный эффект применялся в Windows XP при завершении сеанса, когда ваша картинка на рабочем столе медленно переходит в черно-белое изображение. Таких примеров можно приводить достаточно много, например в видеоредакторе Windows Movie Maker.Все решение скрывается в одной формуле: R(t) = (1-t)*F + t*Sгде t принадлежит [0,1], F - первый кадр, S - второй кадр, R - результирующая картинка, получаемая при плавном переходе из изображения F в S.Наверно многим известна эта формула, например ее используют при движении фигуры по линии." }, { "title": "Рисуем комиксы. Часть 2", "url": "/posts/risuem-komiksy-chast-2.html/", "categories": "", "tags": "Новости, Алгоритмы", "date": "2012-03-20 00:00:00 +0400", "snippet": "«Если немножко заглянуть в будущее, то данный алгоритм переведу на CUDA…» - такими словами заканчивается моя статья “Рисуем комиксы (часть 1)”.Слово сдержал и выношу на общий суд алгоритм Cartoon f...", "content": "«Если немножко заглянуть в будущее, то данный алгоритм переведу на CUDA…» - такими словами заканчивается моя статья “Рисуем комиксы (часть 1)”.Слово сдержал и выношу на общий суд алгоритм Cartoon filter с использованием технологии CUDA. За основу был взят проект bilateralFilter из примеров CUDA SDK. В проекте используется новая для меня технология - текстурная память, а так же для вывода картинки на экране используется графическая библиотека OpenGL c возможностью редактирования параметров фильтра в режиме реального времени.Эффективность алгоритма на GPU по сравнению с CPU можно увидеть невооруженным взглядом. Для примера на моем компьютере изображение размером 515х515 с радиусом 37 на CPU обрабатывается за 34 секунды, GPU с таким заданием справляется за миллисекунды.На словах сложно объяснить, поэтому привожу видеоролик “Алгоритм Cartoon filter с использованием технологии CUDA”:" }, { "title": "Вращаем изображение", "url": "/posts/vrashhaem-izobrazhenie.html/", "categories": "", "tags": "Новости, Алгоритмы", "date": "2012-03-13 22:23:28 +0400", "snippet": "Нашел у себя еще один проект на тему “Обработка изображений”. В принципе ничего нового, идея такая же как и при масштабировании изображения нам нужно найти прообраз функции. Но не будем забегать вп...", "content": "Нашел у себя еще один проект на тему “Обработка изображений”. В принципе ничего нового, идея такая же как и при масштабировании изображения нам нужно найти прообраз функции. Но не будем забегать вперед и сначала огласим полностью задачу “Вращение объекта”: Загрузка цветного изображения. Выделение прямоугольного региона. Определяем произвольную точку поворота, ограничимся условием выбора точки внутри прямоугольника. Задать угол поворота.Реализация: С++ с использованием библиотеки Qt 4.7Теперь продолжим разъяснение алгоритма. Пробегаем весь выделенный прямоугольный регион и для каждого пикселя (x,y) вычисляем координаты в новом “перевернутом” изображении по правилу ((pointX,pointY) - точка вращения):double iX = pointX + (x-pointX)*cos(angle) - (y-pointY)*sin(angle), iY = pointY + (x-pointX)*sin(angle) + (y-pointY)*cos(angle);Теперь мы нашли координату в перевернутом изображении. Остается узнать ее цвет из исходного изображения, ведь мы работаем c вещественными координатами, то точно определить цвет мы не сможем, поэтому надо использовать интерполяцию, я использовал бикубическую, хотя для данного случая хватит и биквадратической. Прообраз функции будет такой:double oy = pointY - (iX-pointX)*sin(angle) + (iY-pointY)*cos(angle), ox = pointX + (iX-pointX)*cos(angle) + (iY-pointY)*sin(angle);Для наглядности привожу скриншот программы:" }, { "title": "Делаем жизнь проще!", "url": "/posts/delaem-zhizn-proshhe.html/", "categories": "", "tags": "Новости", "date": "2012-02-13 00:00:00 +0400", "snippet": "Прогресс не стоит на месте…Очень хочется, чтобы мой родной факультет тоже не стоял на месте и шел в ногу со временем. Все это знают и понимают, но боятся предложить свежие идеи. Поэтому я решил сде...", "content": "Прогресс не стоит на месте…Очень хочется, чтобы мой родной факультет тоже не стоял на месте и шел в ногу со временем. Все это знают и понимают, но боятся предложить свежие идеи. Поэтому я решил сделать первый шаг. На идею моего проекта можно взглянуть на фотографии или у деканата ПМиК.Что из этого получилось, судить вам ;-)Спасибо Хуббатову Рустему за помощь в реализации идеи :-)" }, { "title": "Деформируем изображение", "url": "/posts/deformiruem-izobrazhenie.html/", "categories": "", "tags": "Новости, Алгоритмы", "date": "2012-01-26 00:00:00 +0400", "snippet": "Заканчивает серию программ по предмету “Обработка изображений” алгоритм “Деформация изображения”. Не охота лить воду, ведь тема и так серьезная, поэтому с вашего позволения процитирую небольшой тек...", "content": "Заканчивает серию программ по предмету “Обработка изображений” алгоритм “Деформация изображения”. Не охота лить воду, ведь тема и так серьезная, поэтому с вашего позволения процитирую небольшой текст из лекции: Рассмотрим еще одно преобразование изображений, которое можно отнести к классу геометрических процессов. Суть его заключается в том, что на изображение с мелким шагом наносится регулярная триангуляционная сетка. Затем построенная сетка треугольников деформируется неким образом так, что связи между узлами сохраняются. Задача сводится к тому, чтобы на модифицированной сетке воссоздать исходное изображение со всеми деформациями, растяжениями и другими искажениями. Описанная идея называется ворпинг (от анг. warping – коробить, искривлять) – преобразование изображения, при котором оно в отдельных областях сжимается и растягивается – как будто изображение нанесено на резину. Во время ворпирования элементы преобразуемого изображения пытаются принять положение и форму элементов исходного.Более подробно с лекциями по предмету Семенова А.Б. “Обработка изображений” можно познакомиться на сайте developers.sun.ru.Добавлю свои пять копеек: Идея такая же как и в масштабировании. У нас есть исходный треугольник и трансформированный. Да-да, нам нужно найти прообраз из результирующего треугольника в исходный. В нашем случаи рассмотрим все на примереV1(x1,y1), V2(x2,y2), V3(x3,y3) - вершины треугольника.V0(x0,y0) - точка в треугольнике.T1(u1,v1), T2(u2,v2), T3(u3,v3) - текстурные координаты вершин треугольника.Нужно найти T0(u0,v0).Найдем барицентрические координаты (U,V - числа) точки V0.V1 + U(V2 - V1) + V(V3 - V1) = V0x1 + Ux2 - Ux1 + Vx3 - Vx1 = x0y1 + Uy2 - Uy1 + Vy3 - Vy1 = y0Решая эту систему уравнений находим U,V.Теперь T0 = T1 + U(T2 - T1) + V(T3 - T1).Вот и все. Осталось теперь только закрасить точку V0(x0,y0) цветом T0В задаче для сканирования треугольника, нам потребуется функция для проверки принадлежности точки треугольнику:/* если одинакового знака то внутри, если хоть одно число равно 0 то точка лежит на грани, в остальных случаях лежит вне треугольника.*/bool Triangle::isInputPoint(const Point &amp;point){ Point *A = &amp;m_arrayPoints[0], *B = &amp;m_arrayPoints[1], *C = &amp;m_arrayPoints[2]; int N1 = (B-&gt;y()-A-&gt;y())*(point.x()-A-&gt;x()) - (B-&gt;x()-A-&gt;x())*(point.y()-A-&gt;y()), N2 = (C-&gt;y()-B-&gt;y())*(point.x()-B-&gt;x()) - (C-&gt;x()-B-&gt;x())*(point.y()-B-&gt;y()), N3 = (A-&gt;y()-C-&gt;y())*(point.x()-C-&gt;x()) - (A-&gt;x()-C-&gt;x())*(point.y()-C-&gt;y()); return ((N1 &gt; 0) &amp;&amp; (N2 &gt; 0) &amp;&amp; (N3 &gt; 0)) || ((N1 &lt; 0) &amp;&amp; (N2 &lt; 0) &amp;&amp; (N3 &lt; 0)) || N1 == 0 || N2 == 0 || N3 == 0;}Для полной картины не хватает примера:" }, { "title": "Рисуем комиксы", "url": "/posts/risuem-komiksy.html/", "categories": "", "tags": "Новости, Алгоритмы", "date": "2012-01-08 00:00:00 +0400", "snippet": "Вот и пролетели новогодние праздники…Все встречают новый год по-разному…Но можно предположить, что алгоритм “Встречи нового года” у всех примерно такой: застолье, танцы, песни, поздравление близких...", "content": "Вот и пролетели новогодние праздники…Все встречают новый год по-разному…Но можно предположить, что алгоритм “Встречи нового года” у всех примерно такой: застолье, танцы, песни, поздравление близких и друзей…Вот и я хочу всех поздравить с Новым 2012 годом и процитировать очень запомнившиеся для меня поздравление от Афанасьевой Евгении: “Успехов вам, проектов интересных, здоровья и любви! :-)Хочу предложить первый интересный для меня проект - это Cartoon Filter или как я его называю - мультяшный фильтр. Маленькая часть из моего диплома.Доступно разъясненный алгоритм было очень сложно найти в интернете, поэтому пришлось поднимать исходники различных проектов с реализацией данного алгоритма. И удача была на моей стороне… Оказывается исходники графического редактора GIMP очень хорошо не только написаны, но и подробно прокомментированы.Если не верите, то можете смело скачать исходники с официального сайта и найти файл gimp-2.6.9/plug-ins/common/cartoon.c. Алгоритм очень простой:/* * Cartoon algorithm * ----------------- * Mask radius = radius of pixel neighborhood for intensity comparison * Threshold = relative intensity difference which will result in darkening * Ramp = amount of relative intensity difference before total black * Blur radius = mask radius / 3.0 * * Algorithm: * For each pixel, calculate pixel intensity value to be: avg (blur radius) * relative diff = pixel intensity / avg (mask radius) * If relative diff &lt; Threshold * intensity mult = (Ramp - MIN (Ramp, (Threshold - relative diff))) / Ramp * pixel intensity *= intensity mult */Моя первая реализация алгоритма:void ComicsFilter::cartoon(QImage *image){ double size = m_mask_radius * m_mask_radius; int center = m_mask_radius / 2 + 1, width = m_image-&gt;width() - center, height = m_image-&gt;height() - center, top = m_mask_radius / 2; for(int x = center; x &lt; width; ++x) for(int y = center; y &lt; height; ++y){ int i = 0; double sumR = 0, sumB = 0, sumG = 0; for(int iX = x-top; i &lt; m_mask_radius; ++i,++iX){ int j = 0; for(int iY = y-top; j &lt; m_mask_radius; ++j,++iY){ sumR += qRed(m_image-&gt;pixel(iX,iY)); sumB += qBlue(m_image-&gt;pixel(iX,iY)); sumG += qGreen(m_image-&gt;pixel(iX,iY)); } } sumR /= size; sumB /= size; sumG /= size; //image-&gt;setPixel(x,y,qRgb(sumR,sumB,sumG)); double red = qRed(m_image-&gt;pixel(x,y)), blue = qBlue(m_image-&gt;pixel(x,y)), green = qGreen(m_image-&gt;pixel(x,y)); double koeffR = red / sumR, koeffB = blue / sumB, koeffG = green / sumG; if(koeffR &lt; m_threshold) red *= ((m_ramp - qMin(m_ramp,(m_threshold - koeffR)))/m_ramp); if(koeffB &lt; m_threshold) blue *= ((m_ramp - qMin(m_ramp,(m_threshold - koeffB)))/m_ramp); if(koeffG &lt; m_threshold) green *= ((m_ramp - qMin(m_ramp,(m_threshold - koeffG)))/m_ramp); image-&gt;setPixel(x,y,qRgb(red,green,blue)); }}За основу подойдет любой сглаживающий фильтр. В моем примере я взял усредненный фильтр, а программисты GIMP используют фильтр Гаусса. Фильтром Гаусса сначало идут по столбцам, а затем по строкам и благодаря двум проходам автоматически вычисляют коэффициент затемнения dump:/** @param dest1 по столбцам @param dest2 по строкам @param length размер изображения (width*height) @param pct_black процент затемнения*/static gdoublecompute_ramp (guchar *dest1, guchar *dest2, gint length, gdouble pct_black){ gint hist[100]; gdouble diff; gint count; gint i; gint sum; memset (hist, 0, sizeof (int) * 100); count = 0; for (i = 0; i &lt; length; i++) { if (*dest2 != 0) { diff = (gdouble) *dest1 / (gdouble) *dest2; if (diff &lt; 1.0) { hist[(int) (diff * 100)] += 1; count += 1; } } dest1++; dest2++; } if (pct_black == 0.0 || count == 0) return 1.0; sum = 0; for (i = 0; i &lt; 100; i++) { sum += hist[i]; if (((gdouble) sum / (gdouble) count) &gt; pct_black) return (1.0 - (gdouble) i / 100.0); } return 0.0;}Если немножко заглянуть в будущее, то данный алгоритм переведу на CUDA, думаю это не должно вызвать сложностей, ведь реализации фильтра Гаусса и фильтра с использованием ядра можно найти в примерах CUDA SDK, а также “мультяшный” фильтр попробуем применить к видео файлам.Предлагаю посмотреть на реализацию данного алгоритма. Cartoon filter с параметрами: radius = 23, threshold = 1.0, ramp = 0.15. Если приловчиться с входными параметрами, то можно сделать очень забавные комиксы :-)" }, { "title": "Кто такая Лена?", "url": "/posts/kto-takaya-lena.html/", "categories": "", "tags": "Новости", "date": "2011-09-23 18:06:36 +0400", "snippet": "Давайте представим, что мы на передаче “Что? Где? Когда?” в роли участника игры. На кану путевка в Сочи…С нами играет телезритель из города Н. Фотовопрос знатокам: “Кто изображен на фотографии?”Все...", "content": "Давайте представим, что мы на передаче “Что? Где? Когда?” в роли участника игры. На кану путевка в Сочи…С нами играет телезритель из города Н. Фотовопрос знатокам: “Кто изображен на фотографии?”Все совещаются, предлагают безумные идеи, но никто не знает точного ответа. Время идет, удар в гонг, Александр Груздь решает, что именно ТЫ должен дать ответ … минута тишины … и разочарование в глазах телезрителей.Недавно и у меня возник этот чудной вопрос, во время изучения предмета “Обработка изображений”. И ответ не заставил себя долго ждать. С разрешения автора я выкладываю его статью на тему “Кто такая Лена?”Как это былоЕсли вам когда-нибудь попадутся статьи или книги по обработке изображений, вы обязательно увидите в качестве тестового изображения фотографию симпатичной молодой девушки в шляпке, смотрящую на вас вполоборота. Это Лена, или, как чаще говорят в научном мире, standard test lenna image. Кто такая Лена и как она появилась на страницах научных журналах?Всё началось с того, что в начале 1970-х инженеры из Университета Южной Калифорнии искали тестовое изображение для использования в работе, которая послужила в будущем основой для стандартов JPEG и MPEG. Им надоели обычные тестовые изображения, унылый материал, относящийся ко времени работы над телевизионными стандартами в начале 1960-х. Они хотели что-нибудь глянцевое, что гарантировало бы хороший выходной динамический диапазон. И тут один из сотрудников лаборатории принёс свежий номер журнала Playboy с фотографией Лены Содерберг (Lena Sjööblom), Мисс Playboy за ноябрь 1972 года. На фотографии - красивая девушка в шляпке и сапожках, которая стоит вполоборота к зеркалу. Кроме шляпки и полусапожек на Лене больше ничего не надето.Безусловно, Лена понравилась всем: и фурье-спектр у неё, какой надо, и деталей нужное количество, и источник - доступнее некуда. Поэтому разворот Плэйбоя засунули в сканер, а так как сканер был барабанным, с разрешением 100 линий на дюйм, и исследователям была нужна картинка 512x512, то они отсканировали верхние 5.12 дюйма.Как выяснилось позже, “неизвестным исследователем”, предложившим отсканировать фотографию Лены из Плейбоя, был не кто иной, как William K. Pratt. Прэтту, автору бессмертной книги “Цифровая обработка изображений”, нужно было тестовое изображения для книги, и он, после долгих поисков, остановился на фотографии Лены.Изображение Лены как-то очень легко прижилось, стало широко распространённым и узнаваемым, и многие исследователи даже не подозревали, откуда оно взялось. «Лена, просто Лена» стала настолько привычной и родной, что некоторые считают её Мадонной информационной эпохи. Что только не делали с этим изображением - сжимали, размывали, выделяли границы, корректировали цвета, деформировали и разбивали на регионы…Авторские праваА тем временем Playboy даже не подозревал о том, что фрагмент их изображения гуляет широкими тиражами по другим журналам - до момента, пока Lenna Image не появилось на обложке Optical Engineering. Тут проснулся владелец копирайта, и начал грозить судом научным журналам, в том числе и IEEE Transactions of Image Processing, одному из наиболее респектабельных журналов в области обработки изображений. Произошедшее вызвало оживленные дебаты в научном сообществе - никто не хотел отдавать Лену!К счастью, с журналом Playboy удалось договориться и ситуация разрешилась мирно: изображение можно совершенно законно получить, в том числе и с официального сайта Лены. Более того, журнал Playboy начал гордиться своей ролью, помог разыскать Лену (она так и живет в Швеции) и пригласить ее на 50-ую юбилейную конференцию Научного общества по технологии формирования изображений, где её и представили как «First Lady of the Internet».Земная славаЛена Содерберг, ныне солидная дама, вышедшая замуж, до сих пор живёт в Швеции с семьёй и тремя детьми. Интернетом она никогда не пользовалась и поэтому не подозревала о своей славе. До тех пор, пока ей не рассказал об этом репортёр, бравший у неё интервью. Лена была приятно удивлена тем, что случилось с её фотографией прошлых лет - так она впервые узнала о своей огромной популярности в научных кругах.Её пригласили на юбилейную, 50-ю конференцию Society for Imaging Science and Technology, проходившую в 1997 году. Вот фотография Лены с главным редактором:Для неё было большим сюрпризом, что на конференции серьёзные с виду учёные мужи толпятся вокруг неё, ожидая автографа и надеясь с ней сфотографироваться. «Как же я, вероятно, надоела вам за эти годы..» — сказала смущенная Лена в своей речи.У Лены теперь свой веб-сайт, на котором много интересного. И рассказы о жизни, и нежданная слава, и, конечно, легендарная фотография в полный рост, в годы ударной молодости, принесшее славу :-)Источники: Записки дебианщика Department of Electronic Engineering" } ]
